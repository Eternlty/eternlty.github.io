const CACHE_NAME="eternity-blog-cache-v2",CORE_CACHE_URLS=["/","/manifest.json"],OPTIONAL_CACHE_URLS=["/css/index.css","/js/main.js","/offline/"];async function addToCache(e,s){const t=[];for(const o of s)try{const s=await fetch(o);s.ok?(await e.put(o,s),console.log("✅ 已缓存:",o),t.push({url:o,success:!0})):(console.warn("⚠️ 资源不可用:",o,s.status),t.push({url:o,success:!1,error:`HTTP ${s.status}`}))}catch(e){console.warn("❌ 缓存失败:",o,e.message),t.push({url:o,success:!1,error:e.message})}return t}self.addEventListener("install",e=>{console.log("📋 Service Worker 安装中..."),e.waitUntil(caches.open(CACHE_NAME).then(async e=>{console.log("📋 缓存已打开"),console.log("📋 开始缓存核心资源...");const s=await addToCache(e,CORE_CACHE_URLS);console.log("📋 开始缓存可选资源...");const t=await addToCache(e,OPTIONAL_CACHE_URLS),o=CORE_CACHE_URLS.length+OPTIONAL_CACHE_URLS.length,c=[...s,...t].filter(e=>e.success).length;return console.log(`✅ 缓存初始化完成: ${c}/${o} 个资源成功缓存`),self.skipWaiting()}).catch(e=>(console.error("❌ 缓存初始化失败:",e),self.skipWaiting())))}),self.addEventListener("activate",e=>{console.log("📋 Service Worker 激活中..."),e.waitUntil(caches.keys().then(e=>Promise.all(e.map(e=>{if(e!==CACHE_NAME)return console.log("📋 删除旧缓存:",e),caches.delete(e)}))).then(()=>(console.log("✅ Service Worker 已激活"),self.clients.claim())))}),self.addEventListener("fetch",e=>{if("GET"!==e.request.method)return;new URL(e.request.url).origin===location.origin&&e.respondWith(caches.match(e.request).then(s=>s?(console.log("从缓存返回:",e.request.url),s):fetch(e.request).then(s=>{if(!s||200!==s.status||"basic"!==s.type)return s;const t=s.clone();return caches.open(CACHE_NAME).then(s=>{e.request.url.match(/\.(html|css|js|png|jpg|jpeg|gif|webp|svg|ico)$/)&&(console.log("缓存新资源:",e.request.url),s.put(e.request,t))}),s}).catch(()=>{if("navigate"===e.request.mode)return caches.match("/offline/")})))}),console.log("✅ Service Worker 已加载");